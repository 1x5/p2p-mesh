#!/usr/bin/env node

const puppeteer = require('puppeteer');

async function testSecureMessenger() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç SecureMessenger...');
    
    try {
        const browser = await puppeteer.launch({ 
            headless: false,
            defaultViewport: { width: 375, height: 812 } // iPhone X —Ä–∞–∑–º–µ—Ä
        });
        
        const page = await browser.newPage();
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º console.log
        page.on('console', msg => {
            console.log(`üì± [${msg.type().toUpperCase()}] ${msg.text()}`);
        });
        
        // –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
        page.on('pageerror', error => {
            console.log(`‚ùå [ERROR] ${error.message}`);
        });
        
        console.log('üåê –û—Ç–∫—Ä—ã–≤–∞–µ–º –≤–µ–±-–≤–µ—Ä—Å–∏—é...');
        await page.goto('http://localhost:8081/?platform=web', { 
            waitUntil: 'networkidle0',
            timeout: 30000 
        });
        
        console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
        await page.waitForTimeout(3000);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        const title = await page.$eval('h1, [data-testid="title"], .title', el => el?.textContent).catch(() => null);
        console.log('üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫:', title || '–ù–µ –Ω–∞–π–¥–µ–Ω');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫–∏
        const buttons = await page.$$eval('button, [role="button"]', els => 
            els.map(el => el.textContent?.trim()).filter(Boolean)
        );
        console.log('üîò –ö–Ω–æ–ø–∫–∏:', buttons);
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —à—Ä–∏—Ñ—Ç—ã
        const fontFamily = await page.evaluate(() => {
            const element = document.querySelector('body');
            return window.getComputedStyle(element).fontFamily;
        });
        console.log('üçé –®—Ä–∏—Ñ—Ç:', fontFamily);
        
        console.log('‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
        
        // –û—Å—Ç–∞–≤–ª—è–µ–º –±—Ä–∞—É–∑–µ—Ä –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        console.log('üëÄ –ë—Ä–∞—É–∑–µ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –æ—Ç–∫—Ä—ã—Ç—ã–º –¥–ª—è —Ä—É—á–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏...');
        console.log('üí° –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è');
        
        // –ñ–¥–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ
        await new Promise(() => {});
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
        process.exit(1);
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ puppeteer
try {
    require.resolve('puppeteer');
    testSecureMessenger();
} catch (e) {
    console.log('üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º puppeteer...');
    const { execSync } = require('child_process');
    execSync('npm install puppeteer', { stdio: 'inherit' });
    testSecureMessenger();
}
