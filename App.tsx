import React, { useEffect } from 'react';
import { SafeAreaProvider } from 'react-native-safe-area-context';
import { AppNavigator } from './src/navigation/AppNavigator';
import { EncryptionService } from './src/services/EncryptionService';
import { ThemeProvider } from './src/contexts/ThemeContext';
import './src/styles/webFonts'; // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —à—Ä–∏—Ñ—Ç–æ–≤ –¥–ª—è –≤–µ–±

export default function App() {
  useEffect(() => {
    console.log('üöÄ App starting...');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const initializeEncryption = async () => {
      try {
        console.log('üîê Initializing encryption service...');
        const encryptionService = EncryptionService.getInstance();
        await encryptionService.loadKeys();
        
        // –ï—Å–ª–∏ –∫–ª—é—á–µ–π –Ω–µ—Ç, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ
        if (!encryptionService.getPublicKey()) {
          console.log('üîë Generating new encryption keys...');
          await encryptionService.generateKeyPair();
        }
        console.log('‚úÖ Encryption service initialized successfully');
      } catch (error) {
        console.error('‚ùå Error initializing encryption:', error);
      }
    };

    initializeEncryption();
  }, []);

  console.log('üì± App component rendering...');
  return (
    <SafeAreaProvider>
      <ThemeProvider>
        <AppNavigator />
      </ThemeProvider>
    </SafeAreaProvider>
  );
}